# start
thanks for feedback
presentation and showcase should be combined
questions: sessions / error handling / angular modules where to find? /

# follow up things
module also returns the module back so it could be useful to get the module by name
service/SomeService.js

the root scope, scope hierarchy / slides + batarang

ctrl as ct, use either this or $scope, this is more cleaner
also with es6 classes
var vm = this; return vm;  (optional)

https://docs.angularjs.org/api/ng/type/$rootScope.Scope

all services and factories are singleton
services are constructor fn, can use es6 classes and also return {}
factory can only return object as API
http://blog.thoughtram.io/angular/2015/07/07/service-vs-factory-once-and-for-all.html

angular extend

# application lifecycle

bootstrap app manually angular.bootstrap(document)

what if we wanted to write our own angular?
1. parse DOM, find, process and remember directives, expressions
2. put listeners to ng-model
3. each time input updates - check the prev.state of expressions (templates) and update DOM

angular creates it's own event loop which is called $digest cycle

dirty checking (example with ng-model classes), better then change-listeners model with subscribers, observables
http://stackoverflow.com/questions/9682092/how-does-data-binding-work-in-angularjs/9693933#9693933
all dirty checking is done in 1 transaction
knockout and backbone - dependency tracking if some property depends on other one


$$watchers list, last expr, dirty checking
var destroy watcher  = $watch(watchExpression, listener, [objectEquality]);
objectEquality parameter with custom watchExpression fn

re-run of watchers only if there are dirty, max re-run is 10
$scope.$destroy() and that watchers are eliminated
$new() to create new scope (useful in tests)

show maximum $scope.data.www modify cycles

$eval example with evaluate and evaluated.. fix error with other data not synchronized with $watchGroup

data.www | json filter

usage of $apply, timeout.html
$apply already in progress - if try to invoke $digest in controller


broadcast.html, $on, $emit, $broadcast
ng if example (creates new scope on checkbox click) but the controller ct.q remains the same for both scopes
event propagation slide: every $digest will propagate to children


$injector - only 1 per application
var injector = angular.element(document.body).injector()
usually js is minified and the controller argument names are lost for $injector, for this situation the array ['a', fn(a)] is used




# HW
all: http://adventofcode.com/2016
- ng-evernote:
 create notebook, create note, group by notebook, open notes, edit notes
 export all to / import from json
- famous quotes: http://quotesondesign.com/wp-json/posts?filter[orderby]=rand&filter[posts_per_page]=1
 give a random quote, get another one, fetch 10, 100 of them
 star / like any - remember the id - give the list of starred (already existing, no http requests)
 export starred to / import from json
- interpreter console
 simple input in HTML accepts commands
 can create variable and do math ops
 use eval() and $eval(), catch errors and show evaluation results (or errors) on "enter"
- json builder
 make a simple UI for creating json elements => add element (object, primitive, array), delete property
 resulting json should be on the right side always synchronized


rules:
- styles are good but not required
- use only ng build-in and javascript functions (can use es6)
-